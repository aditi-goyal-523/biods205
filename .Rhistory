res <- wilcox.test(control, wk4, alternative = "two.sided", exact=FALSE)
pvalue <- res$p.value
# store results
todf[[i]] <- c(gene, log2fc, pvalue)
}
# reformat list of vectors into dataframe
dfstats <- as.data.frame(do.call(rbind, todf))
colnames(dfstats) <- c("gene", "log2fc", "pvalue")
dfstats$log2fc <- as.numeric(dfstats$log2fc)
dfstats$pvalue <- as.numeric(dfstats$pvalue)
dfstats <- dfstats[order(dfstats$pvalue),]
# multiple hypothesis correction using benjamini-hochberg procedure
dfstats$qvalue <- p.adjust(dfstats$pvalue, method="BH")
head(dfstats)
dfstats[(dfstats$qvalue<0.05),]
any(dfstats$qvalue < 0.05) # NO SIGNIFICANT P-VALUES AFTER ADJUSTMENT
# volcano plot with p value
EnhancedVolcano(dfstats,
lab = dfstats$gene,
x = 'log2fc',
y = 'qvalue',
title = 'Differential Expression Control/4wk')
dfstats
# Want to use normalized data for this.
# we want to compare pairs of phenotypes: control, 1wk, 2wk, 4wk, 8wk --- four pairwise contrasts (control v 1, control v 2, control v 4, control v 8)
# create subsets of IDs
controlids <- rownames(kidney_PHENO[kidney_PHENO$group=="control",])
week1_ids <- rownames(kidney_PHENO[kidney_PHENO$group=="1w",])
week2_ids <- rownames(kidney_PHENO[kidney_PHENO$group=="2w",])
week4_ids <- rownames(kidney_PHENO[kidney_PHENO$group=="4w",])
week8_ids <- rownames(kidney_PHENO[kidney_PHENO$group=="8w",])
# Note: filtered_norm_counts stores normalized count data for promoter regions only; could also try this with ATAC_KIDNEY_NORM_DATA (normalized data for all peaks, even omoter)
# Run Wilcoxon rank sum test (control vs. 8 wk):
todf <- list()
# for loop through all genes
allgenes <- rownames(filtered_norm_counts)
for (i in seq(length(allgenes))){
# calculate log2fc between control and 8 wk
gene <- allgenes[i]
control <- as.numeric(filtered_norm_counts[i,controlids])
wk4 <- as.numeric(filtered_norm_counts[i,week8_ids])
log2fc <- mean(control) - mean(wk8)   #log(control/wk4) = log(control)-log(4wk)
# wilcoxon rank sums - outputs tstatistic and pvalue; extract pvalue
res <- wilcox.test(control, wk8, alternative = "two.sided", exact=FALSE)
pvalue <- res$p.value
# store results
todf[[i]] <- c(gene, log2fc, pvalue)
}
# Want to use normalized data for this.
# we want to compare pairs of phenotypes: control, 1wk, 2wk, 4wk, 8wk --- four pairwise contrasts (control v 1, control v 2, control v 4, control v 8)
# create subsets of IDs
controlids <- rownames(kidney_PHENO[kidney_PHENO$group=="control",])
week1_ids <- rownames(kidney_PHENO[kidney_PHENO$group=="1w",])
week2_ids <- rownames(kidney_PHENO[kidney_PHENO$group=="2w",])
week4_ids <- rownames(kidney_PHENO[kidney_PHENO$group=="4w",])
week8_ids <- rownames(kidney_PHENO[kidney_PHENO$group=="8w",])
# Note: filtered_norm_counts stores normalized count data for promoter regions only; could also try this with ATAC_KIDNEY_NORM_DATA (normalized data for all peaks, even omoter)
# Run Wilcoxon rank sum test (control vs. 4 wk):
todf <- list()
# for loop through all genes
allgenes <- rownames(filtered_norm_counts)
for (i in seq(length(allgenes))){
# calculate log2fc between control and 4 wk
gene <- allgenes[i]
control <- as.numeric(filtered_norm_counts[i,controlids])
wk4 <- as.numeric(filtered_norm_counts[i,week8_ids])
log2fc <- mean(control) - mean(wk8)   #log(control/wk4) = log(control)-log(4wk)
# wilcoxon rank sums - outputs tstatistic and pvalue; extract pvalue
res <- wilcox.test(control, wk8, alternative = "two.sided", exact=FALSE)
pvalue <- res$p.value
# store results
todf[[i]] <- c(gene, log2fc, pvalue)
}
todf <- list()
# for loop through all genes
allgenes <- rownames(filtered_norm_counts)
for (i in seq(length(allgenes))){
# calculate log2fc between control and 4 wk
gene <- allgenes[i]
control <- as.numeric(filtered_norm_counts[i,controlids])
wk8 <- as.numeric(filtered_norm_counts[i,week8_ids])
log2fc <- mean(control) - mean(wk8)   #log(control/wk8) = log(control)-log(4wk)
# wilcoxon rank sums - outputs tstatistic and pvalue; extract pvalue
res <- wilcox.test(control, wk8, alternative = "two.sided", exact=FALSE)
pvalue <- res$p.value
# store results
todf[[i]] <- c(gene, log2fc, pvalue)
}
todf <- list()
# for loop through all genes
allgenes <- rownames(filtered_norm_counts)
for (i in seq(length(allgenes))){
# calculate log2fc between control and 4 wk
gene <- allgenes[i]
control <- as.numeric(filtered_norm_counts[i,controlids])
wk8 <- as.numeric(filtered_norm_counts[i,week8_ids])
log2fc <- mean(control) - mean(wk8)   #log(control/wk8) = log(control)-log(4wk)
# wilcoxon rank sums - outputs tstatistic and pvalue; extract pvalue
res <- wilcox.test(control, wk8, alternative = "two.sided", exact=FALSE)
pvalue <- res$p.value
# store results
todf[[i]] <- c(gene, log2fc, pvalue)
}
c, pvalue)
# store results
todf[[i]] <- c(gene, log2fc, pvalue)
for (i in seq(length(allgenes))){
# calculate log2fc between control and 4 wk
gene <- allgenes[i]
control <- as.numeric(filtered_norm_counts[i,controlids])
wk8 <- as.numeric(filtered_norm_counts[i,week8_ids])
log2fc <- mean(control) - mean(wk8)   #log(control/wk8) = log(control)-log(4wk)
# wilcoxon rank sums - outputs tstatistic and pvalue; extract pvalue
res <- wilcox.test(control, wk8, alternative = "two.sided", exact=FALSE)
pvalue <- res$p.value
# store results
todf[[i]] <- c(gene, log2fc, pvalue)
}
# reformat list of vectors into dataframe
dfstats <- as.data.frame(do.call(rbind, todf))
colnames(dfstats) <- c("gene", "log2fc", "pvalue")
dfstats$log2fc <- as.numeric(dfstats$log2fc)
dfstats$pvalue <- as.numeric(dfstats$pvalue)
dfstats <- dfstats[order(dfstats$pvalue),]
# multiple hypothesis correction using benjamini-hochberg procedure
dfstats$qvalue <- p.adjust(dfstats$pvalue, method="BH")
head(dfstats)
dfstats[(dfstats$qvalue<0.05),]
any(dfstats$qvalue < 0.05)
dfstats
dfstats$pbins<-NULL
dfstats$pbins[dfstats$qvalue > 0 & dfstats$qvalue < 0.05] <- "<0.05"
dfstats$pbins[dfstats$qvalue >=0.05 & dfstats$qvalue < 0.3] <- "0.05-0.3"
dfstats$pbins[dfstats$qvalue >=0.30 & dfstats$qvalue < 0.6] <- "0.3-0.6"
dfstats$pbins[dfstats$qvalue >=0.60 & dfstats$qvalue < 0.9] <- "0.6-.9"
dfstats$pbins[dfstats$qvalue >=0.90 & dfstats$qvalue < 1] <- "0.9-1.0"
dfstats<-dfstats %>%
filter(is.na(qvalue) == FALSE)
dfstats
ggplot(data = dfstats,
aes(x = pbins)) +
geom_histogram(stat = "count", color="lightgray", fill="lightgray") +
stat_count(binwidth = 1,
geom = 'text',
color = 'black',
aes(label = ..count..),
position = position_stack(vjust = 0.5))+
scale_fill_discrete(drop=FALSE) +
scale_x_discrete(drop=FALSE)+
ggtitle("Limma: Adjusted p-value distribution (female control vs. female 8 wk)")+
theme(plot.title = element_text(hjust = 0.5))+
labs(x="Adjusted p-value bins", y="Number peaks")
dfstats<-dfstats %>%
filter(is.na(qvalue) == FALSE)
ggplot(data = dfstats,
aes(x = pbins)) +
geom_histogram(stat = "count", color="lightgray", fill="lightgray") +
stat_count(binwidth = 1,
geom = 'text',
color = 'black',
aes(label = ..count..),
position = position_stack(vjust = 0.5))+
scale_fill_discrete(drop=FALSE) +
scale_x_discrete(drop=FALSE)+
ggtitle("Limma: Adjusted p-value distribution (female control vs. female 8 wk)")+
theme(plot.title = element_text(hjust = 0.5))+
labs(x="Adjusted p-value bins", y="Number peaks")
# VISUALIZATION OF P-VALUES:
# Make control_8w contrast results into dataframe
dfstats
# VISUALIZATION OF P-VALUES:
# Make control_8w contrast results into dataframe
dfstats$qvalue
# VISUALIZATION OF P-VALUES:
# Make control_8w contrast results into dataframe
View(dfstats)
# VISUALIZATION OF P-VALUES:
# Make control_8w contrast results into dataframe
View(dfstats)
dfstats$pbins<-NULL
dfstats$pbins[dfstats$qvalue > 0 & dfstats$qvalue < 0.05] <- "<0.05"
dfstats$pbins[dfstats$qvalue >=0.05 & dfstats$qvalue < 0.3] <- "0.05-0.3"
dfstats$pbins[dfstats$qvalue >=0.30 & dfstats$qvalue < 0.6] <- "0.3-0.6"
dfstats$pbins[dfstats$qvalue >=0.60 & dfstats$qvalue < 0.9] <- "0.6-.9"
dfstats$pbins[dfstats$qvalue >=0.90 & dfstats$qvalue <= 1] <- "0.9-1.0"
dfstats<-dfstats %>%
filter(is.na(qvalue) == FALSE)
ggplot(data = dfstats,
aes(x = pbins)) +
geom_histogram(stat = "count", color="lightgray", fill="lightgray") +
stat_count(binwidth = 1,
geom = 'text',
color = 'black',
aes(label = ..count..),
position = position_stack(vjust = 0.5))+
scale_fill_discrete(drop=FALSE) +
scale_x_discrete(drop=FALSE)+
ggtitle("Limma: Adjusted p-value distribution (Control vs. 8 wk)")+
theme(plot.title = element_text(hjust = 0.5))+
labs(x="Adjusted p-value bins", y="Number peaks")
# Subset female and male IDs
female<-kidney_PHENO2 %>%
filter(sex == "female")
female
kidney_PHENO2
cbind(saverows,kidney_PHENO2)
kidney_PHENO2
saverows
# Subset female and male IDs
kidney_PHENO2<-as.data.frame(kidney_PHENO2))
# Subset female and male IDs
kidney_PHENO2<-as.data.frame(kidney_PHENO2)
kidney_PHENO2
rownames(kidney_PHENO2)<-saverows
female<-kidney_PHENO2 %>%
filter(sex == "female")
female
male<-kidney_PHENO2 %>%
filter(sex == "male")
male
filtered_norm_counts
rownames(female)
f_ids<-rownames(female)
female
m_ids<-rownames(male)
filtered_norm_counts
filtered_norm_counts[colnames(filtered_raw_counts) %in% f_ids]
filtered_norm_counts[,colnames(filtered_raw_counts) %in% f_ids]
M_filtered_norm_counts <- filtered_norm_counts[,colnames(filtered_raw_counts) %in% f_ids]
M_filtered_norm_counts <- filtered_norm_counts[,colnames(filtered_raw_counts) %in% m_ids]
F_filtered_norm_counts <- filtered_norm_counts[,colnames(filtered_raw_counts) %in% f_ids]
controlids <- rownames(male[male$group=="control",])
week1_ids <- rownames(male[male$group=="1w",])
week2_ids <- rownames(male[male$group=="2w",])
week4_ids <- rownames(male[male$group=="4w",])
week8_ids <- rownames(male[male$group=="8w",])
controlids
todf <- list()
# for loop through all genes
allgenes <- rownames(M_filtered_norm_counts)
for (i in seq(length(allgenes))){
# calculate log2fc between control and 4 wk
gene <- allgenes[i]
control <- as.numeric(M_filtered_norm_counts[i,controlids])
wk8 <- as.numeric(M_filtered_norm_counts[i,week8_ids])
log2fc <- mean(control) - mean(wk8)   #log(control/wk8) = log(control)-log(4wk)
# wilcoxon rank sums - outputs tstatistic and pvalue; extract pvalue
res <- wilcox.test(control, wk8, alternative = "two.sided", exact=FALSE)
pvalue <- res$p.value
# store results
todf[[i]] <- c(gene, log2fc, pvalue)
}
# reformat list of vectors into dataframe
dfstats <- as.data.frame(do.call(rbind, todf))
colnames(dfstats) <- c("gene", "log2fc", "pvalue")
dfstats$log2fc <- as.numeric(dfstats$log2fc)
dfstats$pvalue <- as.numeric(dfstats$pvalue)
dfstats <- dfstats[order(dfstats$pvalue),]
dfstats$qvalue <- p.adjust(dfstats$pvalue, method="BH")
head(dfstats)
dfstats[(dfstats$qvalue<0.05),]
any(dfstats$qvalue < 0.05)
head(dfstats)
# VISUALIZATION OF P-VALUES:
# Make control_8w contrast results into dataframe
View(dfstats)
dfstats<-dfstats %>%
filter(is.na(qvalue) == FALSE)
# VISUALIZATION OF P-VALUES:
# Make control_8w contrast results into dataframe
dfstats$pbins<-NULL
dfstats$pbins[dfstats$qvalue > 0 & dfstats$qvalue < 0.05] <- "<0.05"
dfstats$pbins[dfstats$qvalue >=0.05 & dfstats$qvalue < 0.3] <- "0.05-0.3"
dfstats$pbins[dfstats$qvalue >=0.30 & dfstats$qvalue < 0.6] <- "0.3-0.6"
dfstats$pbins[dfstats$qvalue >=0.60 & dfstats$qvalue < 0.9] <- "0.6-.9"
dfstats$pbins[dfstats$qvalue >=0.90 & dfstats$qvalue <= 1] <- "0.9-1.0"
dfstats<-dfstats %>%
filter(is.na(qvalue) == FALSE)
ggplot(data = dfstats,
aes(x = pbins)) +
geom_histogram(stat = "count", color="lightblue", fill="lightblue") +
stat_count(binwidth = 1,
geom = 'text',
color = 'black',
aes(label = ..count..),
position = position_stack(vjust = 0.5))+
scale_fill_discrete(drop=FALSE) +
scale_x_discrete(drop=FALSE)+
ggtitle("Limma: Adjusted p-value distribution (Control vs. 8 wk)")+
theme(plot.title = element_text(hjust = 0.5))+
labs(x="Adjusted p-value bins", y="Number peaks")
ggplot(data = dfstats,
aes(x = pbins)) +
geom_histogram(stat = "count", color="lightblue", fill="lightblue") +
stat_count(binwidth = 1,
geom = 'text',
color = 'black',
aes(label = ..count..),
position = position_stack(vjust = 0.5))+
scale_fill_discrete(drop=FALSE) +
scale_x_discrete(drop=FALSE)+
ggtitle("Limma: Adjusted p-value distribution (Male control vs. Male 8 wk)")+
theme(plot.title = element_text(hjust = 0.5))+
labs(x="Adjusted p-value bins", y="Number peaks")
ggplot(data = dfstats,
aes(x = pbins)) +
geom_histogram(stat = "count", color="lightblue", fill="lightblue") +
stat_count(binwidth = 1,
geom = 'text',
color = 'black',
aes(label = ..count..),
position = position_stack(vjust = 0.5))+
scale_fill_discrete(drop=FALSE) +
scale_x_discrete(drop=FALSE)+
ggtitle("Wilcoxon: Adjusted p-value distribution (Male control vs. Male 8 wk)")+
theme(plot.title = element_text(hjust = 0.5))+
labs(x="Adjusted p-value bins", y="Number peaks")
controlids <- rownames(female[female$group=="control",])
week1_ids <- rownames(female[female$group=="1w",])
week2_ids <- rownames(female[female$group=="2w",])
week4_ids <- rownames(female[female$group=="4w",])
week8_ids <- rownames(female[female$group=="8w",])
controlids <- rownames(female[female$group=="control",])
week1_ids <- rownames(female[female$group=="1w",])
week2_ids <- rownames(female[female$group=="2w",])
week4_ids <- rownames(female[female$group=="4w",])
week8_ids <- rownames(female[female$group=="8w",])
# Note: filtered_norm_counts stores normalized count data for promoter regions only; could also try this with ATAC_KIDNEY_NORM_DATA (normalized data for all peaks, even omoter)
# Run Wilcoxon rank sum test (control vs. 8 wk):
todf <- list()
# for loop through all genes
allgenes <- rownames(F_filtered_norm_counts)
for (i in seq(length(allgenes))){
# calculate log2fc between control and 4 wk
gene <- allgenes[i]
control <- as.numeric(F_filtered_norm_counts[i,controlids])
wk8 <- as.numeric(F_filtered_norm_counts[i,week8_ids])
log2fc <- mean(control) - mean(wk8)   #log(control/wk8) = log(control)-log(4wk)
# wilcoxon rank sums - outputs tstatistic and pvalue; extract pvalue
res <- wilcox.test(control, wk8, alternative = "two.sided", exact=FALSE)
pvalue <- res$p.value
# store results
todf[[i]] <- c(gene, log2fc, pvalue)
}
# reformat list of vectors into dataframe
dfstats <- as.data.frame(do.call(rbind, todf))
colnames(dfstats) <- c("gene", "log2fc", "pvalue")
dfstats$log2fc <- as.numeric(dfstats$log2fc)
dfstats$pvalue <- as.numeric(dfstats$pvalue)
dfstats <- dfstats[order(dfstats$pvalue),]
# multiple hypothesis correction using benjamini-hochberg procedure
dfstats$qvalue <- p.adjust(dfstats$pvalue, method="BH")
head(dfstats)
dfstats[(dfstats$qvalue<0.05),]
any(dfstats$qvalue < 0.05) # NO SIGNIFICANT P-VALUES AFTER ADJUSTMENT
# VISUALIZATION OF P-VALUES:
# Make control_8w contrast results into dataframe
dfstats$pbins<-NULL
dfstats$pbins[dfstats$qvalue > 0 & dfstats$qvalue < 0.05] <- "<0.05"
dfstats$pbins[dfstats$qvalue >=0.05 & dfstats$qvalue < 0.3] <- "0.05-0.3"
dfstats$pbins[dfstats$qvalue >=0.30 & dfstats$qvalue < 0.6] <- "0.3-0.6"
dfstats$pbins[dfstats$qvalue >=0.60 & dfstats$qvalue < 0.9] <- "0.6-.9"
dfstats$pbins[dfstats$qvalue >=0.90 & dfstats$qvalue <= 1] <- "0.9-1.0"
dfstats<-dfstats %>%
filter(is.na(qvalue) == FALSE)
ggplot(data = dfstats,
aes(x = pbins)) +
geom_histogram(stat = "count", color="lightpink", fill="lightpink") +
stat_count(binwidth = 1,
geom = 'text',
color = 'black',
aes(label = ..count..),
position = position_stack(vjust = 0.5))+
scale_fill_discrete(drop=FALSE) +
scale_x_discrete(drop=FALSE)+
ggtitle("Wilcoxon: Adjusted p-value distribution (Female control vs. Female 8 wk)")+
theme(plot.title = element_text(hjust = 0.5))+
labs(x="Adjusted p-value bins", y="Number peaks")
# VISUALIZATION OF P-VALUES:
# Make control_8w contrast results into dataframe
dfstats$pbins<-NULL
dfstats$pbins[dfstats$qvalue > 0 & dfstats$qvalue < 0.05] <- "<0.05"
dfstats$pbins[dfstats$qvalue >=0.05 & dfstats$qvalue < 0.3] <- "0.05-0.3"
dfstats$pbins[dfstats$qvalue >=0.30 & dfstats$qvalue < 0.6] <- "0.3-0.6"
dfstats$pbins[dfstats$qvalue >=0.60 & dfstats$qvalue < 0.9] <- "0.6-.9"
dfstats$pbins[dfstats$qvalue >=0.90 & dfstats$qvalue <= 1] <- "0.9-1.0"
dfstats<-dfstats %>%
filter(is.na(qvalue) == FALSE)
ggplot(data = dfstats,
aes(x = pbins)) +
geom_histogram(stat = "count", color="lightpink", fill="lightpink") +
stat_count(binwidth = 1,
geom = 'text',
color = 'black',
aes(label = ..count..),
position = position_stack(vjust = 0.5))+
scale_fill_discrete(drop=FALSE) +
scale_x_discrete(drop=FALSE)+
ggtitle("Wilcoxon: Adjusted p-value distribution (Female control vs. Female 8 wk)")+
theme(plot.title = element_text(hjust = 0.5))+
labs(x="Adjusted p-value bins", y="Number peaks")
feature_ensembl <- ATAC_FEATURE_ANNOT %>% dplyr::select("feature_ID","ensembl_gene")
# Join the peaks with the ensembl annotation
combined_data_gene <- left_join(feature_ensembl, ATAC_KIDNEY_RAW_COUNTS) %>% select(-c("feature","assay","tissue"))
# Run DESeq2 on filtered raw counts and phenodata
dds <- DESeqDataSetFromMatrix(countData = grouped,
colData = kidney_PHENO2,
design = ~Sample_batch+peak_enrich.frac_reads_in_peaks.macs2.frip+sex+sex*group+group)
# Join the peaks with the ensembl annotation
combined_data_gene <- left_join(feature_ensembl, ATAC_KIDNEY_RAW_COUNTS) %>% dplyr:: select(-c("feature","assay","tissue"))
rownames(combined_data_gene) <- combined_data_gene$feature_ID
combined_data_gene <- combined_data_gene %>% select(-c("feature_ID"))
feature_ensembl <- ATAC_FEATURE_ANNOT %>% dplyr::select("feature_ID","ensembl_gene")
# Join the peaks with the ensembl annotation
combined_data_gene <- left_join(feature_ensembl, ATAC_KIDNEY_RAW_COUNTS) %>% dplyr:: select(-c("feature","assay","tissue"))
rownames(combined_data_gene) <- combined_data_gene$feature_ID
combined_data_gene <- combined_data_gene %>% dplyr::select(-c("feature_ID"))
dim(combined_data_gene)
# Now group by gene
grouped <- aggregate(. ~ ensembl_gene, combined_data_gene, sum)
rownames(grouped) <- grouped$ensembl_gene
grouped <- grouped %>% select(-c("ensembl_gene"))
grouped <- grouped %>% dplyr::select(-c("ensembl_gene"))
head(grouped)
# Run DESeq2 on filtered raw counts and phenodata
dds <- DESeqDataSetFromMatrix(countData = grouped,
colData = kidney_PHENO2,
design = ~Sample_batch+peak_enrich.frac_reads_in_peaks.macs2.frip+sex+sex*group+group)
dds <- DESeq(dds)
res <- results(dds)
summary(res)
# Look at contrasts between groups
# Control vs. 1 wk: results and top 10 by adjusted p-value
control_1w <-results(dds, contrast=c("group","control","1w"), tidy = TRUE)
summary(control_1w)
head(control_1w[order(control_1w$padj),], 10)
# Control vs. 2 week
control_2w <- results(dds, contrast=c("group", "control", "2w"), tidy = TRUE)
summary(control_2w)
head(control_2w[order(control_2w$padj),], 10)
# Control vs. 4 week
control_4w <- results(dds, contrast=c("group", "control", "4w"), tidy = TRUE)
summary(control_4w)
head(control_4w[order(control_4w$padj),], 10)
# Control vs. 8 week
control_8w <- results(dds, contrast=c("group", "control", "8w"),tidy = TRUE)
summary(control_8w)
head(control_8w[order(control_8w$padj),], 10)
#Volcano for Control vs. 8 week
control_8w <- control_8w[order(res$padj),]
rownames(control_8w) <- control_8w$row
head(control_8w)
EnhancedVolcano(control_8w,
lab = rownames(control_8w),
x = 'log2FoldChange',
y = 'padj')
head(control_8w)
control_8w<-data.frame(control_8w)
control_8w$pbins<-NULL
control_8w$pbins[control_8w$padj > 0 & control_8w$padj < 0.05] <- "<0.05"
control_8w$pbins[control_8w$padj >=0.05 & control_8w$padj < 0.3] <- "0.05-0.3"
control_8w$pbins[control_8w$padj >=0.30 & control_8w$padj < 0.6] <- "0.3-0.6"
control_8w$pbins[control_8w$padj >=0.60 & control_8w$padj < 0.9] <- "0.6-.9"
control_8w$pbins[control_8w$padj >=0.90 & control_8w$padj < 1] <- "0.9-1.0"
control_8w<-control_8w %>%
filter(is.na(padj) == FALSE)
ggplot(data = control_8w,
aes(x = pbins)) +
geom_histogram(stat = "count", color="light gray", fill="light gray") +
stat_count(binwidth = 1,
geom = 'text',
color = 'black',
aes(label = ..count..),
position = position_stack(vjust = 0.5))+
scale_fill_discrete(drop=FALSE) +
scale_x_discrete(drop=FALSE)+
ggtitle("DESeq2: Adjusted p-value distribution (Control vs. 8 wk)")+
theme(plot.title = element_text(hjust = 0.5))+
labs(x="Adjusted p-value bins", y="Number peaks")
ggplot(data = control_8w,
aes(x = pbins)) +
geom_histogram(stat = "count", color="light gray", fill="light gray") +
stat_count(binwidth = 1,
geom = 'text',
color = 'black',
aes(label = ..count..),
position = position_stack(vjust = 0.5))+
scale_fill_discrete(drop=FALSE) +
scale_x_discrete(drop=FALSE)+
ggtitle("DESeq2: Adjusted p-value distribution (Control vs. 8 wk)")+
theme(plot.title = element_text(hjust = 0.5))+
labs(x="Adjusted p-value bins", y="Number peaks")
ggplot(data = female8wk,
aes(x = pbins)) +
geom_histogram(stat = "count", color="lightpink", fill="lightpink") +
stat_count(binwidth = 1,
geom = 'text',
color = 'black',
aes(label = ..count..),
position = position_stack(vjust = 0.5))+
scale_fill_discrete(drop=FALSE) +
scale_x_discrete(drop=FALSE)+
ggtitle("Limma: Adjusted p-value distribution (female control vs. female 8 wk)")+
theme(plot.title = element_text(hjust = 0.5))+
labs(x="Adjusted p-value bins", y="Number peaks")
res <- inner_join(control_8w, bm, by=c("row"="ensembl_gene_id"))
library(biomaRt)
mart <- useDataset("rnorvegicus_gene_ensembl", mart=useMart("ensembl"))
bm <- getBM(attributes=c("ensembl_gene_id", "hsapiens_homolog_associated_gene_name"), mart=mart) %>%
distinct() %>%
as_tibble()
bm
